service: student-data
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 512
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-1
  lambdaHashingVersion: "20201221"
  logRetentionInDays: 7 # Set the default RetentionInDays for a CloudWatch LogGroup
  tracing:
    apiGateway: true
    lambda: true # Optional, can be true (true equals 'Active'), 'Active' or 'PassThrough'
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED	: "1"
    LEDGER_NAME: student-data-${self:provider.stage}
    LOG_LEVEL: WARN
    POWERTOOLS_METRICS_NAMESPACE: ${self:service}
    POWERTOOLS_LOGGER_SAMPLE_RATE: 0.2
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 'qldb:SendCommand'
          Resource:
            - !Sub "arn:aws:qldb:${AWS::Region}:${AWS::AccountId}:ledger/student-data-${self:provider.stage}"
        - Effect: "Allow"
          Action:
            - "xray:PutTraceSegments"
            - "xray:PutTelemetryRecords"
          Resource: "*" # Restrict resource to minimum required

plugins:
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters
  - serverless-esbuild

functions:
  createLicence:
    name: add-student-${self:provider.stage}
    handler: functions/add-student.handler
    environment:
      POWERTOOLS_SERVICE_NAME: addStudent
    iamRoleStatementsInherit: true
    iamRoleStatementsName: student-data-addStudent
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLInsert
          - qldb:PartiQLSelect
          - qldb:PartiQLUpdate
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/student-data-${self:provider.stage}/*"
    events:
      - http:
          path: /addstudent
          method: post

  updateStudent:
    name: update-student-${self:provider.stage}
    handler: functions/update-student.handler
    environment:
      POWERTOOLS_SERVICE_NAME: updateStudent
    iamRoleStatementsInherit: true
    iamRoleStatementsName: student-data-updateStudent
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLSelect
          - qldb:PartiQLUpdate
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/student-data-${self:provider.stage}/*"
    events:
      - http:
          path: /updatestudent
          method: post

  getStudent:
    name: get-student-${self:provider.stage}
    handler: functions/get-student.handler
    environment:
      POWERTOOLS_SERVICE_NAME: getStudent
    iamRoleStatementsInherit: true
    iamRoleStatementsName: student-data-getStudent
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLSelect
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/student-data-${self:provider.stage}/*"
    events:
      - http:
          path: /student/{studentId}
          method: post
  
  getAllStudent:
    name: get-all-student-${self:provider.stage}
    handler: functions/get-all-student.handler
    environment:
      POWERTOOLS_SERVICE_NAME: getAllStudent
    iamRoleStatementsInherit: true
    iamRoleStatementsName: student-data-getAllStudent
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLSelect
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/student-data-${self:provider.stage}/*"
    events:
      - http:
          path: /allstudent
          method: post
  
  # updateContact:
  #   name: update-contact-${self:provider.stage}
  #   handler: functions/update-contact.handler
  #   environment:
  #     POWERTOOLS_SERVICE_NAME: updateContact
  #   iamRoleStatementsInherit: true
  #   iamRoleStatementsName: student-data-updateContact
  #   iamRoleStatements:
  #     - Effect: Allow
  #       Action: 
  #         - qldb:PartiQLSelect
  #         - qldb:PartiQLUpdate
  #       Resource: 
  #         - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/student-data-${self:provider.stage}/*"
  #   events:
  #     - http:
  #         path: /updatecontact
  #         method: post

  deleteStudentData:
    name: delete-student-data-${self:provider.stage}
    handler: functions/delete-student-data.handler
    environment:
      POWERTOOLS_SERVICE_NAME: deleteStudentData
    iamRoleStatementsInherit: true
    iamRoleStatementsName: student-data-deleteStudentData
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLSelect
          - qldb:PartiQLDelete
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/student-data-${self:provider.stage}/*"
    events:
      - http:
          path: /deletedata
          method: post

  createTable:
    name: student-data-table-${self:provider.stage}
    handler: functions/qldbTable.handler
    iamRoleStatementsInherit: true
    iamRoleStatementsName: student-data-createTable
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLCreateTable
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/student-data-${self:provider.stage}/*"
    memorySize: 256
    timeout: 6
    environment:
      TABLE_NAME: Student
      POWERTOOLS_SERVICE_NAME: createTable

  createIndex:
    name: student-data-index-${self:provider.stage}
    handler: functions/qldbIndex.handler
    iamRoleStatementsInherit: true
    iamRoleStatementsName: student-data-createIndex
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - qldb:PartiQLCreateIndex
        Resource: 
          - "arn:aws:qldb:#{AWS::Region}:#{AWS::AccountId}:ledger/student-data-${self:provider.stage}/*"
    memorySize: 256
    timeout: 6
    environment:
      TABLE_NAME: Student
      INDEX_NAME_1: GUID
      INDEX_NAME_2: Email
      INDEX_NAME_3: Telephone
      POWERTOOLS_SERVICE_NAME: createIndex

resources:
  Resources:
    qldbLedger:
      Type: AWS::QLDB::Ledger
      Properties:
        Name: student-data-${self:provider.stage}
        DeletionProtection: false
        PermissionsMode: STANDARD
        Tags:
          - 
            Key: name
            Value: student-data

    qldbTable:
      Type: Custom::qldbTable
      DependsOn: qldbLedger
      Properties:
        ServiceToken: !GetAtt CreateTableLambdaFunction.Arn
        Version: 1.0  #change this to force redeploy

    qldbIndex:
      Type: Custom::qldbIndexes
      DependsOn: qldbTable
      Properties:
        ServiceToken: !GetAtt CreateIndexLambdaFunction.Arn
        Version: 1.0  #change this to force redeploy      

  Outputs:
    qldbStudentLedger:
      Value:
        Ref: qldbLedger
      Export:
        Name: student-data